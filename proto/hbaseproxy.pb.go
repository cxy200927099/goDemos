// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hbaseproxy.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Data struct {
	Key                  *string  `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value                *string  `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data) Reset()         { *m = Data{} }
func (m *Data) String() string { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()    {}
func (*Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_687e90a9baad9d4b, []int{0}
}

func (m *Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data.Unmarshal(m, b)
}
func (m *Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data.Marshal(b, m, deterministic)
}
func (m *Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data.Merge(m, src)
}
func (m *Data) XXX_Size() int {
	return xxx_messageInfo_Data.Size(m)
}
func (m *Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Data proto.InternalMessageInfo

func (m *Data) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Data) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type HbasePutRequest struct {
	Version              *uint32  `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	DataArray            []*Data  `protobuf:"bytes,2,rep,name=dataArray" json:"dataArray,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HbasePutRequest) Reset()         { *m = HbasePutRequest{} }
func (m *HbasePutRequest) String() string { return proto.CompactTextString(m) }
func (*HbasePutRequest) ProtoMessage()    {}
func (*HbasePutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_687e90a9baad9d4b, []int{1}
}

func (m *HbasePutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HbasePutRequest.Unmarshal(m, b)
}
func (m *HbasePutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HbasePutRequest.Marshal(b, m, deterministic)
}
func (m *HbasePutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HbasePutRequest.Merge(m, src)
}
func (m *HbasePutRequest) XXX_Size() int {
	return xxx_messageInfo_HbasePutRequest.Size(m)
}
func (m *HbasePutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HbasePutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HbasePutRequest proto.InternalMessageInfo

func (m *HbasePutRequest) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *HbasePutRequest) GetDataArray() []*Data {
	if m != nil {
		return m.DataArray
	}
	return nil
}

type HbasePutResp struct {
	Version              *uint32  `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	Status               *uint32  `protobuf:"varint,2,req,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HbasePutResp) Reset()         { *m = HbasePutResp{} }
func (m *HbasePutResp) String() string { return proto.CompactTextString(m) }
func (*HbasePutResp) ProtoMessage()    {}
func (*HbasePutResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_687e90a9baad9d4b, []int{2}
}

func (m *HbasePutResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HbasePutResp.Unmarshal(m, b)
}
func (m *HbasePutResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HbasePutResp.Marshal(b, m, deterministic)
}
func (m *HbasePutResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HbasePutResp.Merge(m, src)
}
func (m *HbasePutResp) XXX_Size() int {
	return xxx_messageInfo_HbasePutResp.Size(m)
}
func (m *HbasePutResp) XXX_DiscardUnknown() {
	xxx_messageInfo_HbasePutResp.DiscardUnknown(m)
}

var xxx_messageInfo_HbasePutResp proto.InternalMessageInfo

func (m *HbasePutResp) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *HbasePutResp) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type HbaseGetRequest struct {
	Version              *uint32  `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	Keys                 []string `protobuf:"bytes,2,rep,name=keys" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HbaseGetRequest) Reset()         { *m = HbaseGetRequest{} }
func (m *HbaseGetRequest) String() string { return proto.CompactTextString(m) }
func (*HbaseGetRequest) ProtoMessage()    {}
func (*HbaseGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_687e90a9baad9d4b, []int{3}
}

func (m *HbaseGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HbaseGetRequest.Unmarshal(m, b)
}
func (m *HbaseGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HbaseGetRequest.Marshal(b, m, deterministic)
}
func (m *HbaseGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HbaseGetRequest.Merge(m, src)
}
func (m *HbaseGetRequest) XXX_Size() int {
	return xxx_messageInfo_HbaseGetRequest.Size(m)
}
func (m *HbaseGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HbaseGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HbaseGetRequest proto.InternalMessageInfo

func (m *HbaseGetRequest) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *HbaseGetRequest) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

type HbaseGetResp struct {
	Version              *uint32  `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	Status               *uint32  `protobuf:"varint,2,req,name=status" json:"status,omitempty"`
	DataArray            []*Data  `protobuf:"bytes,3,rep,name=dataArray" json:"dataArray,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HbaseGetResp) Reset()         { *m = HbaseGetResp{} }
func (m *HbaseGetResp) String() string { return proto.CompactTextString(m) }
func (*HbaseGetResp) ProtoMessage()    {}
func (*HbaseGetResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_687e90a9baad9d4b, []int{4}
}

func (m *HbaseGetResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HbaseGetResp.Unmarshal(m, b)
}
func (m *HbaseGetResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HbaseGetResp.Marshal(b, m, deterministic)
}
func (m *HbaseGetResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HbaseGetResp.Merge(m, src)
}
func (m *HbaseGetResp) XXX_Size() int {
	return xxx_messageInfo_HbaseGetResp.Size(m)
}
func (m *HbaseGetResp) XXX_DiscardUnknown() {
	xxx_messageInfo_HbaseGetResp.DiscardUnknown(m)
}

var xxx_messageInfo_HbaseGetResp proto.InternalMessageInfo

func (m *HbaseGetResp) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *HbaseGetResp) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *HbaseGetResp) GetDataArray() []*Data {
	if m != nil {
		return m.DataArray
	}
	return nil
}

type HbaseHeartBeatRequest struct {
	Version              *uint32  `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	Btype                *uint32  `protobuf:"varint,2,req,name=btype" json:"btype,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HbaseHeartBeatRequest) Reset()         { *m = HbaseHeartBeatRequest{} }
func (m *HbaseHeartBeatRequest) String() string { return proto.CompactTextString(m) }
func (*HbaseHeartBeatRequest) ProtoMessage()    {}
func (*HbaseHeartBeatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_687e90a9baad9d4b, []int{5}
}

func (m *HbaseHeartBeatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HbaseHeartBeatRequest.Unmarshal(m, b)
}
func (m *HbaseHeartBeatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HbaseHeartBeatRequest.Marshal(b, m, deterministic)
}
func (m *HbaseHeartBeatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HbaseHeartBeatRequest.Merge(m, src)
}
func (m *HbaseHeartBeatRequest) XXX_Size() int {
	return xxx_messageInfo_HbaseHeartBeatRequest.Size(m)
}
func (m *HbaseHeartBeatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HbaseHeartBeatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HbaseHeartBeatRequest proto.InternalMessageInfo

func (m *HbaseHeartBeatRequest) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *HbaseHeartBeatRequest) GetBtype() uint32 {
	if m != nil && m.Btype != nil {
		return *m.Btype
	}
	return 0
}

type HbaseHeartBeatResp struct {
	Version              *uint32  `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	Btype                *uint32  `protobuf:"varint,2,req,name=btype" json:"btype,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HbaseHeartBeatResp) Reset()         { *m = HbaseHeartBeatResp{} }
func (m *HbaseHeartBeatResp) String() string { return proto.CompactTextString(m) }
func (*HbaseHeartBeatResp) ProtoMessage()    {}
func (*HbaseHeartBeatResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_687e90a9baad9d4b, []int{6}
}

func (m *HbaseHeartBeatResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HbaseHeartBeatResp.Unmarshal(m, b)
}
func (m *HbaseHeartBeatResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HbaseHeartBeatResp.Marshal(b, m, deterministic)
}
func (m *HbaseHeartBeatResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HbaseHeartBeatResp.Merge(m, src)
}
func (m *HbaseHeartBeatResp) XXX_Size() int {
	return xxx_messageInfo_HbaseHeartBeatResp.Size(m)
}
func (m *HbaseHeartBeatResp) XXX_DiscardUnknown() {
	xxx_messageInfo_HbaseHeartBeatResp.DiscardUnknown(m)
}

var xxx_messageInfo_HbaseHeartBeatResp proto.InternalMessageInfo

func (m *HbaseHeartBeatResp) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *HbaseHeartBeatResp) GetBtype() uint32 {
	if m != nil && m.Btype != nil {
		return *m.Btype
	}
	return 0
}

func init() {
	proto.RegisterType((*Data)(nil), "proto.Data")
	proto.RegisterType((*HbasePutRequest)(nil), "proto.HbasePutRequest")
	proto.RegisterType((*HbasePutResp)(nil), "proto.HbasePutResp")
	proto.RegisterType((*HbaseGetRequest)(nil), "proto.HbaseGetRequest")
	proto.RegisterType((*HbaseGetResp)(nil), "proto.HbaseGetResp")
	proto.RegisterType((*HbaseHeartBeatRequest)(nil), "proto.HbaseHeartBeatRequest")
	proto.RegisterType((*HbaseHeartBeatResp)(nil), "proto.HbaseHeartBeatResp")
}

func init() { proto.RegisterFile("hbaseproxy.proto", fileDescriptor_687e90a9baad9d4b) }

var fileDescriptor_687e90a9baad9d4b = []byte{
	// 313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xd1, 0x4a, 0xc3, 0x30,
	0x14, 0x86, 0xd9, 0xba, 0x29, 0x3d, 0x5d, 0x9d, 0x44, 0x94, 0x3a, 0x45, 0x46, 0xae, 0x06, 0x42,
	0x95, 0x22, 0x78, 0x6d, 0x19, 0xb8, 0x3b, 0x87, 0x3e, 0x41, 0xb6, 0x1d, 0xd6, 0xb2, 0x6a, 0x62,
	0x92, 0xd6, 0xf5, 0xdd, 0x7c, 0x38, 0x69, 0xd6, 0x31, 0xdb, 0x5a, 0xf0, 0xaa, 0xb4, 0xcd, 0xf7,
	0xff, 0xdf, 0x39, 0x81, 0xd3, 0x68, 0xc1, 0x14, 0x0a, 0xc9, 0xb7, 0xb9, 0x2f, 0x24, 0xd7, 0x9c,
	0xf4, 0xcd, 0x83, 0x52, 0xe8, 0x4d, 0x99, 0x66, 0xc4, 0x01, 0x6b, 0x83, 0xb9, 0xd7, 0x19, 0x77,
	0x27, 0x36, 0x71, 0xa1, 0x9f, 0xb1, 0x24, 0x45, 0xaf, 0x5b, 0xbc, 0xd2, 0x10, 0x86, 0xb3, 0x02,
	0x9f, 0xa7, 0xfa, 0x15, 0x3f, 0x53, 0x54, 0x9a, 0x0c, 0xe1, 0x38, 0x43, 0xa9, 0x62, 0xfe, 0x61,
	0x10, 0x97, 0xdc, 0x80, 0xbd, 0x62, 0x9a, 0x3d, 0x49, 0xc9, 0x72, 0xaf, 0x3b, 0xb6, 0x26, 0x4e,
	0xe0, 0xec, 0x9a, 0xfc, 0x22, 0x9f, 0xde, 0xc1, 0xe0, 0x90, 0xa1, 0x44, 0x33, 0xe0, 0x04, 0x8e,
	0x94, 0x66, 0x3a, 0x55, 0xa6, 0xd4, 0xa5, 0xf7, 0x65, 0xe9, 0x33, 0xb6, 0x97, 0x0e, 0xa0, 0xb7,
	0xc1, 0x5c, 0x99, 0x3e, 0x9b, 0xbe, 0x94, 0x15, 0x86, 0xf8, 0x47, 0x45, 0xd5, 0xd9, 0x6a, 0x3a,
	0x3f, 0xc2, 0xb9, 0x09, 0x9c, 0x21, 0x93, 0x3a, 0x44, 0xd6, 0x2e, 0xe2, 0x42, 0x7f, 0xa1, 0x73,
	0x81, 0xa5, 0xfb, 0x03, 0x90, 0x3a, 0xf8, 0x97, 0x4f, 0x95, 0x0a, 0xbe, 0x3b, 0xe5, 0x00, 0x6f,
	0x28, 0xb3, 0x78, 0x89, 0x24, 0x00, 0x4b, 0xa4, 0x9a, 0x5c, 0x94, 0x4e, 0xb5, 0x3b, 0x18, 0x9d,
	0x35, 0xbe, 0x2b, 0x51, 0x30, 0x6b, 0xac, 0x31, 0x87, 0x15, 0x56, 0x99, 0xfd, 0xa2, 0xa6, 0x60,
	0x47, 0x7b, 0x53, 0x72, 0xfd, 0xfb, 0x44, 0x7d, 0xf2, 0xd1, 0x65, 0xcb, 0x5f, 0x25, 0xc2, 0x5b,
	0xb8, 0x8a, 0xb9, 0xbf, 0x96, 0x62, 0xe9, 0xe3, 0x96, 0xbd, 0x8b, 0x04, 0x95, 0x1f, 0x61, 0x92,
	0xf0, 0x2f, 0x2e, 0x93, 0x55, 0x08, 0x3b, 0xcd, 0x82, 0x9e, 0x77, 0x7e, 0x02, 0x00, 0x00, 0xff,
	0xff, 0xe7, 0xda, 0x19, 0x7f, 0x90, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HbaseServiceClient is the client API for HbaseService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HbaseServiceClient interface {
	Put(ctx context.Context, in *HbasePutRequest, opts ...grpc.CallOption) (*HbasePutResp, error)
	Get(ctx context.Context, in *HbaseGetRequest, opts ...grpc.CallOption) (*HbaseGetResp, error)
	HeartBeat(ctx context.Context, in *HbaseHeartBeatRequest, opts ...grpc.CallOption) (*HbaseHeartBeatResp, error)
}

type hbaseServiceClient struct {
	cc *grpc.ClientConn
}

func NewHbaseServiceClient(cc *grpc.ClientConn) HbaseServiceClient {
	return &hbaseServiceClient{cc}
}

func (c *hbaseServiceClient) Put(ctx context.Context, in *HbasePutRequest, opts ...grpc.CallOption) (*HbasePutResp, error) {
	out := new(HbasePutResp)
	err := c.cc.Invoke(ctx, "/proto.HbaseService/put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hbaseServiceClient) Get(ctx context.Context, in *HbaseGetRequest, opts ...grpc.CallOption) (*HbaseGetResp, error) {
	out := new(HbaseGetResp)
	err := c.cc.Invoke(ctx, "/proto.HbaseService/get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hbaseServiceClient) HeartBeat(ctx context.Context, in *HbaseHeartBeatRequest, opts ...grpc.CallOption) (*HbaseHeartBeatResp, error) {
	out := new(HbaseHeartBeatResp)
	err := c.cc.Invoke(ctx, "/proto.HbaseService/heartBeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HbaseServiceServer is the server API for HbaseService service.
type HbaseServiceServer interface {
	Put(context.Context, *HbasePutRequest) (*HbasePutResp, error)
	Get(context.Context, *HbaseGetRequest) (*HbaseGetResp, error)
	HeartBeat(context.Context, *HbaseHeartBeatRequest) (*HbaseHeartBeatResp, error)
}

func RegisterHbaseServiceServer(s *grpc.Server, srv HbaseServiceServer) {
	s.RegisterService(&_HbaseService_serviceDesc, srv)
}

func _HbaseService_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HbasePutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HbaseServiceServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.HbaseService/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HbaseServiceServer).Put(ctx, req.(*HbasePutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HbaseService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HbaseGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HbaseServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.HbaseService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HbaseServiceServer).Get(ctx, req.(*HbaseGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HbaseService_HeartBeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HbaseHeartBeatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HbaseServiceServer).HeartBeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.HbaseService/HeartBeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HbaseServiceServer).HeartBeat(ctx, req.(*HbaseHeartBeatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HbaseService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.HbaseService",
	HandlerType: (*HbaseServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "put",
			Handler:    _HbaseService_Put_Handler,
		},
		{
			MethodName: "get",
			Handler:    _HbaseService_Get_Handler,
		},
		{
			MethodName: "heartBeat",
			Handler:    _HbaseService_HeartBeat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hbaseproxy.proto",
}
